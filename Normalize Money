local function abbreviateNumber(num, precision)
    precision = precision or 2
    
    if type(num) ~= "number" then
        return tostring(num)
    end
    
    if num == 0 then
        return "0"
    end
    
    local isNegative = num < 0
    num = math.abs(num)
    
    local suffixes = {
        {threshold = 1e12, suffix = "T"},
        {threshold = 1e9,  suffix = "B"},
        {threshold = 1e6,  suffix = "M"},
        {threshold = 1e3,  suffix = "K"} 
    }
    
    local result
    
    for _, data in ipairs(suffixes) do
        if num >= data.threshold then
            local value = num / data.threshold
            
            local formatStr = "%." .. precision .. "f%s"
            result = string.format(formatStr, value, data.suffix)
            
            if precision > 0 then
                result = result:gsub("%.?0+" .. data.suffix, data.suffix)
            end
            
            break
        end
    end
    
    if not result then
        if num == math.floor(num) then
            result = string.format("%.0f", num)
        else
            result = tostring(num)
        end
    end
    
    if isNegative then
        result = "-" .. result
    end
    
    return result
end

return abbreviateNumber
